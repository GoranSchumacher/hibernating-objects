akka {
  loglevel = INFO
  actor {
    provider = cluster
    allow-java-serialization = off
    serializers {
      kryo = "com.romix.akka.serialization.kryo.KryoSerializer"
    }
    serialization-bindings {
      "java.io.Serializable" = kryo
    }

    kryo {
      implicit-registration-logging = false
      kryo-trace = false
      idstrategy=automatic

      mappings {
        // Add classes used in messages between nodes as needed.
        // Adding classes here is not required but improves performance and reduces message footprint.
        // NB: All IDs registered here must be unique!
        // NB: *Never* change registration mappings that were already deployed to avoid errors during rolling updates

        "scala.Some" = 100
        "scala.None$" = 101

        // "de.kaufhof.ess.control.backend.infrastructure.logging.CorrelationId" = 200

        // "de.kaufhof.ess.control.backend.infrastructure.bruteforcechecker.BruteForceChecker$SuccessfulLogin" = 300
        // "de.kaufhof.ess.control.backend.infrastructure.bruteforcechecker.BruteForceChecker$FailedLogin" = 301
        // "de.kaufhof.ess.control.backend.infrastructure.bruteforcechecker.BruteForceChecker$LoginResponse" = 302
      }
    }
  }
  remote {
    log-remote-lifecycle-events = off
    netty.tcp {
      hostname = "127.0.0.1"
      port = 0
    }
  }

  //ADDED BY GÃ¶ran
  persistence {
    journal.plugin = "akka-contrib-mongodb-persistence-journal"
    snapshot-store.plugin = "akka-contrib-mongodb-persistence-snapshot"
    fsm.snapshot-after = 10 // Do not work
  }

  contrib {
    persistence {
      mongodb {
        mongo {
          urls = ["localhost:27017"]
          database = "akka-persistence"
          #username = "my.mongo.user"
          #password = "secret"
          journal-collection = "akka_persistence_journal"
          journal-index = "akka_persistence_journal_index"
          # Write concerns are one of: ErrorsIgnored, Unacknowledged, Acknowledged, Journaled, ReplicaAcknowledged
          journal-write-concern = "Journaled"
          snaps-collection = "akka_persistence_snaps"
          snaps-index = "akka_persistence_snaps_index"
          snaps-write-concern = "Journaled"

          breaker {
            maxTries = 5
            timeout {
              call = 5s
              reset = 5s
            }
          }
        }
      }
    }
  }

  cluster {
    seed-nodes = [
      "akka.tcp://ShardingSystem@127.0.0.1:2551",
      "akka.tcp://ShardingSystem@127.0.0.1:2552"]

    # auto downing is NOT safe for production deployments.
    # you may want to use it during development, read more about it in the docs.
    auto-down-unreachable-after = 10s
  }
}
//akka.contrib.persistence.mongodb.mongo.mongouri = "mongodb://localhost/credential-database"
//akka.contrib.persistence.mongodb.mongo.database = "storage-db"